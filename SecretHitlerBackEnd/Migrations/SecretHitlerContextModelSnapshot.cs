// <auto-generated />
using System;
using BackEnd.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace SecretHitlerBackEnd.Migrations
{
    [DbContext(typeof(SecretHitlerContext))]
    partial class SecretHitlerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BackEnd.Models.Friendship", b =>
                {
                    b.Property<int>("FriendshipId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FriendId");

                    b.Property<int>("Relation");

                    b.Property<int>("UserId");

                    b.HasKey("FriendshipId");

                    b.HasIndex("UserId");

                    b.ToTable("Friendships");
                });

            modelBuilder.Entity("BackEnd.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdminId");

                    b.Property<string>("Name");

                    b.Property<int>("NumberOfPlayer");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("BackEnd.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<int>("Gender");

                    b.Property<string>("ImagePath");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<int?>("RoomId");

                    b.Property<int>("Status");

                    b.HasKey("UserId");

                    b.HasIndex("RoomId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BackEnd.Models.Friendship", b =>
                {
                    b.HasOne("BackEnd.Models.User", "User")
                        .WithMany("Friendships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BackEnd.Models.User", b =>
                {
                    b.HasOne("BackEnd.Models.Room", "Room")
                        .WithMany("UsersJoining")
                        .HasForeignKey("RoomId");
                });
#pragma warning restore 612, 618
        }
    }
}
